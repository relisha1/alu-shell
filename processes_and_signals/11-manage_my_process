#!/usr/bin/env bash
# This script manages the 'manage_my_process' script with start, stop, and restart commands.

PID_FILE="/var/run/my_process.pid"
PROCESS_SCRIPT="./manage_my_process"

start() {
  if [ -f "$PID_FILE" ] && kill -0 "$(cat "$PID_FILE")" 2>/dev/null; then
    echo "manage_my_process is already running."
    exit 1
  fi

  nohup "$PROCESS_SCRIPT" &> /dev/null &
  echo $! > "$PID_FILE"
  echo "manage_my_process started"
}

stop() {
  if [ -f "$PID_FILE" ]; then
    pid=$(cat "$PID_FILE")
    if kill -0 "$pid" 2>/dev/null; then
      kill "$pid"
      rm -f "$PID_FILE"
      echo "manage_my_process stopped"
    else
      echo "Process not running but PID file exists. Cleaning up."
      rm -f "$PID_FILE"
    fi
  else
    echo "No running process found."
  fi
}

restart() {
  # Stop and start the process, but only print the "restarted" message.
  stop &> /dev/null
  sleep 1  # Ensure the old process is stopped.
  start &> /dev/null
  echo "manage_my_process restarted"
}

usage() {
  echo "Usage: manage_my_process {start|stop|restart}"
  exit 1
}

# Main logic to handle arguments.
case "$1" in
  start) start ;;
  stop) stop ;;
  restart) restart ;;
  *) usage ;;
esac

